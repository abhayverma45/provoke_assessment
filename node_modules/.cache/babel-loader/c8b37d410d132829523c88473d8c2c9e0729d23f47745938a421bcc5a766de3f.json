{"ast":null,"code":"var _jsxFileName = \"/Users/abhaykumarverma/Desktop/provoke_assessmenr/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videoId, setVideoId] = useState(''); // Replace with your unlisted video ID\n  const [apiKey, setApiKey] = useState(''); // Replace with your YouTube Data API key\n  const [player, setPlayer] = useState(null);\n  useEffect(() => {\n    // Fetch video details using YouTube Data API\n    axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`).then(response => {\n      const title = response.data.items[0].snippet.title;\n      document.title = title; // Set the page title to the video title\n    }).catch(error => console.error('Error fetching video details:', error));\n  }, [videoId, apiKey]);\n  const onReady = event => {\n    setPlayer(event.target);\n  };\n  const onStateChange = event => {\n    // Handle player state changes if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Video Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter YouTube Video ID\",\n      value: videoId,\n      onChange: e => setVideoId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter YouTube API Key\",\n      value: apiKey,\n      onChange: e => setApiKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), videoId && apiKey && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: {\n        height: '390',\n        width: '640',\n        playerVars: {\n          modestbranding: 1,\n          // Hide YouTube logo\n          controls: 1 // Show video controls\n        }\n      },\n      onReady: onReady,\n      onStateChange: onStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TE49lVmcwFGHAFggL8W7eNCUc+8=\");\n_c = App;\nexport default App;\nAIzaSyDWRSaummuprjeEz0cb - cP2GQ3r5oHl9Ec;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","YouTube","axios","jsxDEV","_jsxDEV","App","_s","videoId","setVideoId","apiKey","setApiKey","player","setPlayer","get","then","response","title","data","items","snippet","document","catch","error","console","onReady","event","target","onStateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","opts","height","width","playerVars","modestbranding","controls","_c","AIzaSyDWRSaummuprjeEz0cb","cP2GQ3r5oHl9Ec","$RefreshReg$"],"sources":["/Users/abhaykumarverma/Desktop/provoke_assessmenr/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport axios from 'axios';\n\nfunction App() {\n  const [videoId, setVideoId] = useState(''); // Replace with your unlisted video ID\n  const [apiKey, setApiKey] = useState(''); // Replace with your YouTube Data API key\n  const [player, setPlayer] = useState(null);\n\n  useEffect(() => {\n    // Fetch video details using YouTube Data API\n    axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`)\n      .then(response => {\n        const title = response.data.items[0].snippet.title;\n        document.title = title; // Set the page title to the video title\n      })\n      .catch(error => console.error('Error fetching video details:', error));\n  }, [videoId, apiKey]);\n\n  const onReady = (event) => {\n    setPlayer(event.target);\n  };\n\n  const onStateChange = (event) => {\n    // Handle player state changes if needed\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>YouTube Video Player</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter YouTube Video ID\"\n        value={videoId}\n        onChange={(e) => setVideoId(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter YouTube API Key\"\n        value={apiKey}\n        onChange={(e) => setApiKey(e.target.value)}\n      />\n      {videoId && apiKey && (\n        <YouTube\n          videoId={videoId}\n          opts={{\n            height: '390',\n            width: '640',\n            playerVars: {\n              modestbranding: 1, // Hide YouTube logo\n              controls: 1, // Show video controls\n            },\n          }}\n          onReady={onReady}\n          onStateChange={onStateChange}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nAIzaSyDWRSaummuprjeEz0cb-cP2GQ3r5oHl9Ec"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACAG,KAAK,CAACW,GAAG,CAAE,gEAA+DN,OAAQ,QAAOE,MAAO,EAAC,CAAC,CAC/FK,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACH,KAAK;MAClDI,QAAQ,CAACJ,KAAK,GAAGA,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACf,OAAO,EAAEE,MAAM,CAAC,CAAC;EAErB,MAAMe,OAAO,GAAIC,KAAK,IAAK;IACzBb,SAAS,CAACa,KAAK,CAACC,MAAM,CAAC;EACzB,CAAC;EAED,MAAMC,aAAa,GAAIF,KAAK,IAAK;IAC/B;EAAA,CACD;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,wBAAwB;MACpCC,KAAK,EAAE7B,OAAQ;MACf8B,QAAQ,EAAGC,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACZ,MAAM,CAACU,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAE3B,MAAO;MACd4B,QAAQ,EAAGC,CAAC,IAAK5B,SAAS,CAAC4B,CAAC,CAACZ,MAAM,CAACU,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EACD1B,OAAO,IAAIE,MAAM,iBAChBL,OAAA,CAACH,OAAO;MACNM,OAAO,EAAEA,OAAQ;MACjBgC,IAAI,EAAE;QACJC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,KAAK;QACZC,UAAU,EAAE;UACVC,cAAc,EAAE,CAAC;UAAE;UACnBC,QAAQ,EAAE,CAAC,CAAE;QACf;MACF,CAAE;MACFpB,OAAO,EAAEA,OAAQ;MACjBG,aAAa,EAAEA;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAvDQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAyDZ,eAAeA,GAAG;AAElByC,wBAAwB,GAACC,cAAc;AAAA,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}